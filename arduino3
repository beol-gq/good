#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include "WiFiEsp.h"
#include <SoftwareSerial.h> 
#define rxPin 3 
#define txPin 2 
SoftwareSerial esp01(txPin, rxPin); // SoftwareSerial NAME(TX, RX);
int count = 0;
int count2 = 0;
int tem[2];
int temp = 0;
int weather;

int redPin = 11;
int greenPin = 10;
int bluePin = 9;

char ssid[] = "beolgq";            // your network SSID (name)
char pass[] = "12345678";        // your network password
int status = WL_IDLE_STATUS;     // the Wifi radio's status

// http://www.kma.go.kr/wid/queryDFSRSS.jsp?zone=4617039000
const char* host = "www.kma.go.kr";
const String url = "/wid/queryDFSRSS.jsp?zone=4617039000";

// Initialize the Ethernet client object
WiFiEspClient client;

LiquidCrystal_I2C lcd(0x27, 16, 2);

void setup() {
  Serial.begin(9600);
  esp01.begin(9600);
  WiFi.init(&esp01);   // initialize ESP module
  while ( status != WL_CONNECTED) {   // attempt to connect to WiFi network
    Serial.print("Attempting to connect to WPA SSID: ");
    Serial.println(ssid);
    status = WiFi.begin(ssid, pass);    // Connect to WPA/WPA2 network
  }
  Serial.println("You're connected to the network");
  printWifiStatus(); // wifi 상태표시 및 딜레이
  Serial.println();
  Serial.println("Starting connection to server...");
  if (client.connect(host, 80)) {
    Serial.println("Connected to server");
    client.print("GET /wid/queryDFSRSS.jsp?zone=4617039000 HTTP/1.1\r\nHost: www.kma.go.kr\r\nConnection: close\r\n\r\n");
  }
  lcd.init();
  lcd.backlight();
  pinMode(redPin, OUTPUT);
  pinMode(greenPin, OUTPUT);
  pinMode(bluePin, OUTPUT);
}

int i=0;

void loop() {
  while (client.available()) {
    char c = client.read();
    //Serial.write(c);
    if (c == '<') {
      count++;
    }
    if (count >= 46 && count <= 47 ) {
      count2++;
      if (count2 >= 6 && count2 <= 7) {
        Serial.write(c);
        tem[count2-6] = (int)(c-48);
      }
    }
  }
  if (!client.connected()) {
    Serial.println();
    Serial.println(tem[0]);
    Serial.println(tem[1]);

    temp += tem[0]*10;
    temp += tem[1];

    weather = temp;
    Serial.println("Disconnecting from server...");
    Serial.print(temp);
    client.stop();
    while (true); // do nothing forevermore
  }
  lcd.init();
  lcd.setCursor(0,0),lcd.print("high temp is");
  lcd.setCursor(0,1), lcd.print(weather);
  delay(1000);
  lcd.init();
  if (weather >= 33) {
    setColor(255, 0, 0);
    lcd.setCursor(0,0), lcd.print("too hot");
  }
  else if (weather < 33 && weather >= 25) {
    setColor(80, 0, 80);
    lcd.setCursor(0,0), lcd.print("little hot");
  }
  else if (weather < 25 && weather >= 18) {
    setColor(255, 255, 0);
    lcd.setCursor(0,0), lcd.print("warm");
  }
  else if (weather < 18 && weather >= 10) {
    setColor(0, 100, 100);
    lcd.setCursor(0,0), lcd.print("cool");
  }
  else if (weather < 10 && weather >= 3) {
    setColor(0, 0, 255);
    lcd.setCursor(0,0), lcd.print("cold");
  }
  else if (weather < 3) {
    setColor(255, 255, 255);
    lcd.setCursor(0,0), lcd.print("very cold");
  }
}

void printWifiStatus() {
  Serial.print("SSID: ");   // print the SSID of the network you're attached to
  Serial.println(WiFi.SSID());
  IPAddress ip = WiFi.localIP();  // print your WiFi shield's IP address
  Serial.print("IP Address: ");
  Serial.println(ip);
  long rssi = WiFi.RSSI();  // print the received signal strength
  Serial.print("Signal strength (RSSI):");
  Serial.print(rssi);
  Serial.println(" dBm");
}

void setColor(int red, int green, int blue) {
  analogWrite(redPin, red);
  analogWrite(greenPin, green);
  analogWrite(bluePin, blue); 
}
